{"ast":null,"code":"var _jsxFileName = \"D:\\\\student-list-app-main\\\\src\\\\Components\\\\edit-student.component.js\",\n    _s = $RefreshSig$();\n\n// EditStudent Component for update student data\n// Import Modules\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport StudentForm from \"./StudentForm\"; // EditStudent Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditStudent = () => {\n  _s();\n\n  let params = useParams();\n  let _id = params.id;\n  let navigate = useNavigate();\n  const [formValues, setFormValues] = useState({\n    name: '',\n    email: '',\n    rollno: ''\n  }); //onSubmit handler\n\n  const onSubmit = studentObject => {\n    axios.put(\"http://localhost:4000/students/update-student/\" + _id, studentObject).then(res => {\n      if (res.status === 200) {\n        alert(\"Student successfully updated\");\n        navigate(\"/student-list\");\n      } else Promise.reject();\n    }).catch(err => alert(\"Something went wrong\"));\n  }; // Load data from server and reinitialize student form\n\n\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/students/update-student/\" + _id).then(res => {\n      const {\n        name,\n        email,\n        rollno\n      } = res.data;\n      setFormValues({\n        name,\n        email,\n        rollno\n      });\n    }).catch(err => console.log(err));\n  }, [_id]); // Return student form\n\n  return /*#__PURE__*/_jsxDEV(StudentForm, {\n    initialValues: formValues,\n    onSubmit: onSubmit,\n    enableReinitialize: true,\n    children: \"Update Student\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}; // Export EditStudent Component\n\n\n_s(EditStudent, \"8eUNbM/PAn2/6dH7YjXl/M2jtz4=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = EditStudent;\nexport default EditStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditStudent\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","StudentForm","EditStudent","params","_id","id","navigate","formValues","setFormValues","name","email","rollno","onSubmit","studentObject","put","then","res","status","alert","Promise","reject","catch","err","get","data","console","log"],"sources":["D:/student-list-app-main/src/Components/edit-student.component.js"],"sourcesContent":["// EditStudent Component for update student data\n\n// Import Modules\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport StudentForm from \"./StudentForm\";\n\n// EditStudent Component\nconst EditStudent = () => {\n  let params = useParams();\n  let _id = params.id;\n  let navigate = useNavigate();\n  const [formValues, setFormValues] = useState({ name: '', email: '', rollno: '' })\n\t\n  //onSubmit handler\n  const onSubmit = (studentObject) => {\n    axios\n    .put(\n      \"http://localhost:4000/students/update-student/\" + _id,\n      studentObject\n    )\n    .then((res) => {\n      if (res.status === 200) {\n      alert(\"Student successfully updated\");\n      navigate(\"/student-list\");\n      } else Promise.reject();\n    })\n    .catch((err) => alert(\"Something went wrong\"));\n  };\n\n  // Load data from server and reinitialize student form\n  useEffect(() => {\n    axios\n    .get(\n      \"http://localhost:4000/students/update-student/\" + _id\n    )\n    .then((res) => {\n      const { name, email, rollno } = res.data;\n      setFormValues({ name, email, rollno });\n    })\n    .catch((err) => console.log(err));\n  }, [_id]);\n\n  // Return student form\n  return (\n    <StudentForm\n    initialValues={formValues}\n    onSubmit={onSubmit}\n    enableReinitialize\n    >\n    Update Student\n    </StudentForm>\n  );\n};\n\n// Export EditStudent Component\nexport default EditStudent;\n"],"mappings":";;;AAAA;AAEA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,kBAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;;;;AACA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,IAAIC,MAAM,GAAGL,SAAS,EAAtB;EACA,IAAIM,GAAG,GAAGD,MAAM,CAACE,EAAjB;EACA,IAAIC,QAAQ,GAAGP,WAAW,EAA1B;EACA,MAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC;IAAEa,IAAI,EAAE,EAAR;IAAYC,KAAK,EAAE,EAAnB;IAAuBC,MAAM,EAAE;EAA/B,CAAD,CAA5C,CAJwB,CAMxB;;EACA,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;IAClCb,KAAK,CACJc,GADD,CAEE,mDAAmDV,GAFrD,EAGES,aAHF,EAKCE,IALD,CAKOC,GAAD,IAAS;MACb,IAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;QACxBC,KAAK,CAAC,8BAAD,CAAL;QACAZ,QAAQ,CAAC,eAAD,CAAR;MACC,CAHD,MAGOa,OAAO,CAACC,MAAR;IACR,CAVD,EAWCC,KAXD,CAWQC,GAAD,IAASJ,KAAK,CAAC,sBAAD,CAXrB;EAYD,CAbD,CAPwB,CAsBxB;;;EACArB,SAAS,CAAC,MAAM;IACdG,KAAK,CACJuB,GADD,CAEE,mDAAmDnB,GAFrD,EAICW,IAJD,CAIOC,GAAD,IAAS;MACb,MAAM;QAAEP,IAAF;QAAQC,KAAR;QAAeC;MAAf,IAA0BK,GAAG,CAACQ,IAApC;MACAhB,aAAa,CAAC;QAAEC,IAAF;QAAQC,KAAR;QAAeC;MAAf,CAAD,CAAb;IACD,CAPD,EAQCU,KARD,CAQQC,GAAD,IAASG,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CARhB;EASD,CAVQ,EAUN,CAAClB,GAAD,CAVM,CAAT,CAvBwB,CAmCxB;;EACA,oBACE,QAAC,WAAD;IACA,aAAa,EAAEG,UADf;IAEA,QAAQ,EAAEK,QAFV;IAGA,kBAAkB,MAHlB;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CA7CD,C,CA+CA;;;GA/CMV,W;UACSJ,S,EAEEC,W;;;KAHXG,W;AAgDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}